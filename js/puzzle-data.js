const PREDEFINED_PUZZLES = {
    1: {
        name: "Baby Steps",
        goalConflicts: 3,
        goalMoves: 6,
        grid: [
            [5, 3, 4, 6, 7, 8, 9, 1, 2],
            [6, 7, 2, 1, 9, 5, 3, 4, 8],
            [1, 9, 8, 3, 4, 2, 5, 6, 7],
            [8, 5, 9, 7, 0, 1, 4, 2, 3],  // Row 4, Cell 6 is empty
            [4, 2, 6, 8, 0, 3, 7, 9, 1],  // Row 5, Cell 5 is empty
            [7, 1, 3, 9, 0, 4, 8, 5, 6],  // Row 6, Cell 4 is empty
            [9, 6, 1, 5, 3, 7, 2, 8, 4],
            [2, 8, 7, 4, 1, 9, 6, 3, 5],
            [3, 4, 5, 2, 8, 6, 1, 7, 9]
        ],
        solution: [
            [5, 3, 4, 6, 7, 8, 9, 1, 2],
            [6, 7, 2, 1, 9, 5, 3, 4, 8],
            [1, 9, 8, 3, 4, 2, 5, 6, 7],
            [8, 5, 9, 7, 6, 1, 4, 2, 3],  // Row 4, Cell 6 → 1
            [4, 2, 6, 8, 5, 3, 7, 9, 1],  // Row 5, Cell 5 → 5
            [7, 1, 3, 9, 2, 4, 8, 5, 6],  // Row 6, Cell 4 → 9
            [9, 6, 1, 5, 3, 7, 2, 8, 4],
            [2, 8, 7, 4, 1, 9, 6, 3, 5],
            [3, 4, 5, 2, 8, 6, 1, 7, 9]
        ]
    },

    2: {
        name: "Lonely Islands",
        goalConflicts: 3,
        goalMoves: 6,
        grid: [
            [5, 3, 4, 6, 7, 8, 9, 1, 2],
            [6, 7, 2, 1, 9, 5, 3, 4, 8],  
            [1, 9, 8, 3, 4, 2, 5, 6, 7],
            [8, 5, 9, 7, 6, 1, 4, 2, 3],
            [4, 2, 6, 0, 0, 0, 7, 9, 1],  // Row 5: Empty Cells at (4,5,6)
            [7, 1, 3, 9, 2, 4, 8, 5, 6],
            [9, 6, 1, 5, 3, 7, 2, 8, 4],
            [2, 8, 7, 4, 1, 9, 6, 3, 5],  
            [3, 4, 5, 2, 8, 6, 1, 7, 9]
        ],
        solution: [
            [5, 3, 4, 6, 7, 8, 9, 1, 2],
            [6, 7, 2, 1, 9, 5, 3, 4, 8],  
            [1, 9, 8, 3, 4, 2, 5, 6, 7],
            [8, 5, 9, 7, 6, 1, 4, 2, 3],
            [4, 2, 6, 8, 5, 3, 7, 9, 1],  // 853
            [7, 1, 3, 9, 2, 4, 8, 5, 6],
            [9, 6, 1, 5, 3, 7, 2, 8, 4],
            [2, 8, 7, 4, 1, 9, 6, 3, 5],  
            [3, 4, 5, 2, 8, 6, 1, 7, 9]
        ]
    },

    3: {
        name: "Empty Middle Square",
        goalConflicts: 5,
        goalMoves: 20,
        grid: [
            [5, 3, 4, 6, 7, 8, 9, 1, 2],
            [6, 7, 2, 1, 9, 5, 3, 4, 8],
            [1, 9, 8, 3, 4, 2, 5, 6, 7],
            [8, 5, 9, 0, 0, 0, 4, 2, 3],
            [4, 2, 6, 0, 0, 0, 7, 9, 1],
            [7, 1, 3, 0, 0, 0, 8, 5, 6],
            [9, 6, 1, 5, 3, 7, 2, 8, 4],
            [2, 8, 7, 4, 1, 9, 6, 3, 5],
            [3, 4, 5, 2, 8, 6, 1, 7, 9]
        ],
        solution: [
            [5, 3, 4, 6, 7, 8, 9, 1, 2],
            [6, 7, 2, 1, 9, 5, 3, 4, 8],
            [1, 9, 8, 3, 4, 2, 5, 6, 7],
            [8, 5, 9, 7, 6, 1, 4, 2, 3],
            [4, 2, 6, 8, 5, 3, 7, 9, 1],
            [7, 1, 3, 9, 2, 4, 8, 5, 6],
            [9, 6, 1, 5, 3, 7, 2, 8, 4],
            [2, 8, 7, 4, 1, 9, 6, 3, 5],
            [3, 4, 5, 2, 8, 6, 1, 7, 9]
        ]
    },

    4: {
        name: "Lonely Islands",
        goalConflicts: 6,
        goalMoves: 20,
        grid: [
            [5, 3, 4, 6, 7, 8, 9, 1, 2],
            [6, 7, 2, 1, 9, 5, 3, 4, 8],
            [1, 9, 8, 0, 0, 0, 5, 6, 7],  // Row 3: Empty at (4,5,6)
            [8, 5, 0, 7, 6, 1, 0, 2, 3],  // Row 4: Empty at (3,7)
            [4, 2, 0, 8, 5, 3, 0, 9, 1],  // Row 5: Empty at (3,7)
            [7, 1, 0, 9, 2, 4, 0, 5, 6],  // Row 6: Empty at (3,7)
            [9, 6, 1, 0, 0, 0, 2, 8, 4],  // Row 7: Empty at (4,5,6)
            [2, 8, 7, 4, 1, 9, 6, 3, 5],
            [3, 4, 5, 2, 8, 6, 1, 7, 9]
        ],
        solution: [
            [5, 3, 4, 6, 7, 8, 9, 1, 2],
            [6, 7, 2, 1, 9, 5, 3, 4, 8],
            [1, 9, 8, 3, 4, 2, 5, 6, 7],  // Row 3 (filled correctly)
            [8, 5, 9, 7, 6, 1, 4, 2, 3],  // Row 4 (fixed)
            [4, 2, 6, 8, 5, 3, 7, 9, 1],  // Row 5 (fixed)
            [7, 1, 3, 9, 2, 4, 8, 5, 6],  // Row 6 (fixed)
            [9, 6, 1, 5, 3, 7, 2, 8, 4],  // Row 7 (filled correctly)
            [2, 8, 7, 4, 1, 9, 6, 3, 5],
            [3, 4, 5, 2, 8, 6, 1, 7, 9]
        ]
    },
    
    5: {
        name: "Lonely Islands",
        goalConflicts: 5,
        goalMoves: 20,
        grid: [
            [5, 3, 4, 6, 7, 8, 9, 1, 2],
            [6, 0, 2, 1, 0, 5, 3, 0, 8],  // Row 2: Empty Cells at (2,5,8)
            [1, 9, 8, 3, 4, 2, 5, 6, 7],
            [8, 5, 9, 7, 6, 1, 4, 2, 3],
            [4, 0, 6, 8, 0, 3, 7, 0, 1],  // Row 5: Empty Cells at (2,5,8)
            [7, 1, 3, 9, 2, 4, 8, 5, 6],
            [9, 6, 1, 5, 3, 7, 2, 8, 4],
            [2, 0, 7, 4, 0, 9, 6, 0, 5],  // Row 8: Empty Cells at (2,5,8)
            [3, 4, 5, 2, 8, 6, 1, 7, 9]
        ],
        solution: [
            [5, 3, 4, 6, 7, 8, 9, 1, 2],
            [6, 7, 2, 1, 9, 5, 3, 4, 8],  // Row 2: (Cell 2→1, Cell 5→2, Cell 8→3)
            [1, 9, 8, 3, 4, 2, 5, 6, 7],
            [8, 5, 9, 7, 6, 1, 4, 2, 3],
            [4, 2, 6, 8, 5, 3, 7, 9, 1],  // Row 5: (Cell 2→4, Cell 5→5, Cell 8→6)
            [7, 1, 3, 9, 2, 4, 8, 5, 6],
            [9, 6, 1, 5, 3, 7, 2, 8, 4],
            [2, 8, 7, 4, 1, 9, 6, 3, 5],  // Row 8: (Cell 2→7, Cell 5→8, Cell 8→9)
            [3, 4, 5, 2, 8, 6, 1, 7, 9]
        ]
    },

    6: {
        name: "Three Empty Rows",
        goalConflicts: 10,
        goalMoves: 30,
        grid: [
            [5, 3, 4, 6, 7, 8, 9, 1, 2],
            [0, 0, 0, 0, 0, 0, 0, 0, 0],
            [1, 9, 8, 3, 4, 2, 5, 6, 7],
            [8, 5, 9, 7, 6, 1, 4, 2, 3],
            [0, 0, 0, 0, 0, 0, 0, 0, 0],
            [7, 1, 3, 9, 2, 4, 8, 5, 6],
            [9, 6, 1, 5, 3, 7, 2, 8, 4],
            [0, 0, 0, 0, 0, 0, 0, 0, 0],
            [3, 4, 5, 2, 8, 6, 1, 7, 9]
        ],
        solution: [
            [5, 3, 4, 6, 7, 8, 9, 1, 2],
            [6, 7, 2, 1, 9, 5, 3, 4, 8],
            [1, 9, 8, 3, 4, 2, 5, 6, 7],
            [8, 5, 9, 7, 6, 1, 4, 2, 3],
            [4, 2, 6, 8, 5, 3, 7, 9, 1],
            [7, 1, 3, 9, 2, 4, 8, 5, 6],
            [9, 6, 1, 5, 3, 7, 2, 8, 4],
            [2, 8, 7, 4, 1, 9, 6, 3, 5],
            [3, 4, 5, 2, 8, 6, 1, 7, 9]
        ]
    },


    // Add puzzle 3 similarly
};
